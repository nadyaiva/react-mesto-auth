{"ast":null,"code":"const BASE_URL = \"https://auth.nomoreparties.co\";\nexport const register = inputValueObj => {\n  return fetch(BASE_URL + \"/signup\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(inputValueObj)\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const login = inputValueObj => {\n  return fetch(BASE_URL + \"/signin\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(inputValueObj)\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const getContent = token => {\n  return fetch(BASE_URL + \"/users/me\", {\n    method: \"GET\",\n    headers: {\n      'Accept': \"application/json\",\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};","map":{"version":3,"names":["BASE_URL","register","inputValueObj","fetch","method","headers","Accept","body","JSON","stringify","then","res","ok","json","Promise","reject","status","login","getContent","token"],"sources":["/Users/nadyaivanova/dev/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["const BASE_URL = \"https://auth.nomoreparties.co\";\n\nexport const register = (inputValueObj) => {\n  return fetch(BASE_URL + \"/signup\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(inputValueObj),\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\n\nexport const login = (inputValueObj) => {\n  return fetch(BASE_URL + \"/signin\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(inputValueObj),\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\n\nexport const getContent = (token) => {\n  return fetch(BASE_URL + \"/users/me\", {\n    method: \"GET\",\n    headers: {\n      'Accept': \"application/json\",\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${token}`,\n    },\n  })\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,+BAAjB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;EACzC,OAAOC,KAAK,CAACH,QAAQ,GAAG,SAAZ,EAAuB;IACjCI,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACPC,MAAM,EAAE,kBADD;MAEP,gBAAgB;IAFT,CAFwB;IAMjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,aAAf;EAN2B,CAAvB,CAAL,CAOJQ,IAPI,CAOEC,GAAD,IAAS;IACf,IAAIA,GAAG,CAACC,EAAR,EAAY;MACV,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACD;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;EACD,CAZM,CAAP;AAaD,CAdM;AAgBP,OAAO,MAAMC,KAAK,GAAIf,aAAD,IAAmB;EACtC,OAAOC,KAAK,CAACH,QAAQ,GAAG,SAAZ,EAAuB;IACjCI,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFwB;IAKjCE,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,aAAf;EAL2B,CAAvB,CAAL,CAMJQ,IANI,CAMEC,GAAD,IAAS;IACf,IAAIA,GAAG,CAACC,EAAR,EAAY;MACV,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACD;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;EACD,CAXM,CAAP;AAYD,CAbM;AAeP,OAAO,MAAME,UAAU,GAAIC,KAAD,IAAW;EACnC,OAAOhB,KAAK,CAACH,QAAQ,GAAG,WAAZ,EAAyB;IACnCI,MAAM,EAAE,KAD2B;IAEnCC,OAAO,EAAE;MACP,UAAU,kBADH;MAEP,gBAAgB,kBAFT;MAGP,iBAAkB,UAASc,KAAM;IAH1B;EAF0B,CAAzB,CAAZ;AAQD,CATM"},"metadata":{},"sourceType":"module"}