{"ast":null,"code":"class ApiClass {\n  constructor(config) {\n    this._authorization = config.authorization;\n    this._cohort = config.cohort;\n    this._baseurl = config.baseurl;\n  }\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfoApi() {\n    return fetch(`${this._baseurl}${this._cohort}/users/me`, {\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(this._handleResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseurl}${this._cohort}/cards`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._handleResponse);\n  }\n\n  updateUserInfo(inputProfileObj) {\n    return fetch(`${this._baseurl}${this._cohort}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(inputProfileObj)\n    }).then(this._handleResponse);\n  }\n\n  addNewCard(cardInputData) {\n    console.log(cardInputData);\n    return fetch(`${this._baseurl}${this._cohort}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(cardInputData)\n    }).then(this._handleResponse);\n  }\n\n  changeCardLikeStatus(cardId, isLiked) {\n    return fetch(`${this._baseurl}${this._cohort}/cards/${cardId}/likes`, {\n      method: isLiked ? \"PUT\" : \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._handleResponse);\n  }\n\n  deletePost(cardId) {\n    return fetch(`${this._baseurl}${this._cohort}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._handleResponse);\n  }\n\n  updateAvatar(avatarObj) {\n    return fetch(`${this._baseurl}${this._cohort}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(avatarObj)\n    }).then(this._handleResponse);\n  }\n\n}\n\nconst Api = new ApiClass({\n  authorization: \"d94e7cf1-3761-45b6-9798-0ad1da8f2858\",\n  cohort: \"cohort-42\",\n  baseurl: \"https://nomoreparties.co/v1/\"\n});\nexport default Api;","map":{"version":3,"names":["ApiClass","constructor","config","_authorization","authorization","_cohort","cohort","_baseurl","baseurl","_handleResponse","res","ok","json","Promise","reject","status","getUserInfoApi","fetch","headers","localStorage","getItem","then","getInitialCards","updateUserInfo","inputProfileObj","method","body","JSON","stringify","addNewCard","cardInputData","console","log","changeCardLikeStatus","cardId","isLiked","deletePost","updateAvatar","avatarObj","Api"],"sources":["/Users/nadyaivanova/dev/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["class ApiClass {\n  constructor(config) {\n    this._authorization = config.authorization;\n    this._cohort = config.cohort;\n    this._baseurl = config.baseurl;\n  }\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfoApi() {\n    return fetch(`${this._baseurl}${this._cohort}/users/me`, {\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`\n      },\n    }).then(this._handleResponse);\n  }\n  getInitialCards() {\n    return fetch(`${this._baseurl}${this._cohort}/cards`, {\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._handleResponse);\n  }\n  updateUserInfo(inputProfileObj) {\n    return fetch(`${this._baseurl}${this._cohort}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(inputProfileObj),\n    }).then(this._handleResponse);\n  }\n  addNewCard(cardInputData) {\n    console.log(cardInputData)\n    return fetch(`${this._baseurl}${this._cohort}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(cardInputData),\n    }).then(this._handleResponse);\n  }\n\n  changeCardLikeStatus(cardId, isLiked) {\n    return fetch(`${this._baseurl}${this._cohort}/cards/${cardId}/likes`, {\n      method: isLiked ? \"PUT\" : \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._handleResponse);\n  }\n\n  deletePost(cardId) {\n    return fetch(`${this._baseurl}${this._cohort}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._handleResponse);\n  }\n  updateAvatar(avatarObj) {\n    return fetch(`${this._baseurl}${this._cohort}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(avatarObj),\n    }).then(this._handleResponse);\n  }\n}\n\nconst Api = new ApiClass({\n  authorization: \"d94e7cf1-3761-45b6-9798-0ad1da8f2858\",\n  cohort: \"cohort-42\",\n  baseurl: \"https://nomoreparties.co/v1/\",\n});\n\nexport default Api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}