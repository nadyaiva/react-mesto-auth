{"ast":null,"code":"var _jsxFileName = \"/Users/nadyaivanova/dev/mesto-react/src/components/Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Api from \"../utils/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(_ref) {\n  _s();\n\n  let {\n    card,\n    onCardClick\n  } = _ref;\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    Api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  const currentUser = React.useContext(CurrentUserContext); // Определяем, являемся ли мы владельцем текущей карточки\n\n  const isOwn = card.owner._id === currentUser._id; // Создаём переменную, которую после зададим в `className` для кнопки удаления\n\n  const cardDeleteButtonClassName = `card__delete-button ${isOwn ? \"\" : \"elements__button_trash_hidden\"}`; // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n  const isLiked = card.likes.some(i => i._id === currentUser._id); // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n  const cardLikeButtonClassName = `${isLiked ? \"elements__button_like_active\" : \"elements__button_like\"}`;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"elements__element\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: cardDeleteButtonClassName,\n      type: \"button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"elements__image\",\n      src: card.link,\n      alt: card.name,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"elements__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"elements__caption\",\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"elements__like-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: cardLikeButtonClassName,\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"elements__info_like-count\",\n          children: card.likes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","CurrentUserContext","Api","Card","card","onCardClick","handleClick","handleCardLike","isLiked","likes","some","i","_id","currentUser","changeLikeCardStatus","then","newCard","setCards","state","map","c","useContext","isOwn","owner","cardDeleteButtonClassName","cardLikeButtonClassName","link","name","length"],"sources":["/Users/nadyaivanova/dev/mesto-react/src/components/Card.jsx"],"sourcesContent":["import React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Api from \"../utils/Api\";\n\nfunction Card({ card, onCardClick }) {\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    Api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n}\n  const currentUser = React.useContext(CurrentUserContext);\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = card.owner._id === currentUser._id;\n\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = `card__delete-button ${\n    isOwn ? \"\" : \"elements__button_trash_hidden\"\n  }`;\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = `${isLiked ? \"elements__button_like_active\" : \"elements__button_like\"}`;\n\n  return (\n    <li className=\"elements__element\">\n      <button className={cardDeleteButtonClassName} type=\"button\"></button>\n      <img\n        className=\"elements__image\"\n        src={card.link}\n        alt={card.name}\n        onClick={handleClick}\n      />\n      <div className=\"elements__info\">\n        <p className=\"elements__caption\">{card.name}</p>\n        <div className=\"elements__like-info\">\n          <button className={cardLikeButtonClassName} type=\"button\"></button>\n          <div className=\"elements__info_like-count\">{card.likes.length}</div>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAOC,GAAP,MAAgB,cAAhB;;;AAEA,SAASC,IAAT,OAAqC;EAAA;;EAAA,IAAvB;IAAEC,IAAF;IAAQC;EAAR,CAAuB;;EACnC,SAASC,WAAT,GAAuB;IACrBD,WAAW,CAACD,IAAD,CAAX;EACD;;EAED,SAASG,cAAT,CAAwBH,IAAxB,EAA8B;IAC5B;IACA,MAAMI,OAAO,GAAGJ,IAAI,CAACK,KAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUC,WAAW,CAACD,GAA3C,CAAhB,CAF4B,CAI5B;;IACAV,GAAG,CAACY,oBAAJ,CAAyBV,IAAI,CAACQ,GAA9B,EAAmC,CAACJ,OAApC,EAA6CO,IAA7C,CAAmDC,OAAD,IAAa;MAC3DC,QAAQ,CAAEC,KAAD,IAAWA,KAAK,CAACC,GAAN,CAAWC,CAAD,IAAOA,CAAC,CAACR,GAAF,KAAUR,IAAI,CAACQ,GAAf,GAAqBI,OAArB,GAA+BI,CAAhD,CAAZ,CAAR;IACH,CAFD;EAGH;;EACC,MAAMP,WAAW,GAAGb,KAAK,CAACqB,UAAN,CAAiBpB,kBAAjB,CAApB,CAdmC,CAenC;;EACA,MAAMqB,KAAK,GAAGlB,IAAI,CAACmB,KAAL,CAAWX,GAAX,KAAmBC,WAAW,CAACD,GAA7C,CAhBmC,CAkBnC;;EACA,MAAMY,yBAAyB,GAAI,uBACjCF,KAAK,GAAG,EAAH,GAAQ,+BACd,EAFD,CAnBmC,CAuBnC;;EACA,MAAMd,OAAO,GAAGJ,IAAI,CAACK,KAAL,CAAWC,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUC,WAAW,CAACD,GAA7C,CAAhB,CAxBmC,CA0BnC;;EACA,MAAMa,uBAAuB,GAAI,GAAEjB,OAAO,GAAG,8BAAH,GAAoC,uBAAwB,EAAtG;EAEA,oBACE;IAAI,SAAS,EAAC,mBAAd;IAAA,wBACE;MAAQ,SAAS,EAAEgB,yBAAnB;MAA8C,IAAI,EAAC;IAAnD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MACE,SAAS,EAAC,iBADZ;MAEE,GAAG,EAAEpB,IAAI,CAACsB,IAFZ;MAGE,GAAG,EAAEtB,IAAI,CAACuB,IAHZ;MAIE,OAAO,EAAErB;IAJX;MAAA;MAAA;MAAA;IAAA,QAFF,eAQE;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACE;QAAG,SAAS,EAAC,mBAAb;QAAA,UAAkCF,IAAI,CAACuB;MAAvC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,qBAAf;QAAA,wBACE;UAAQ,SAAS,EAAEF,uBAAnB;UAA4C,IAAI,EAAC;QAAjD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAK,SAAS,EAAC,2BAAf;UAAA,UAA4CrB,IAAI,CAACK,KAAL,CAAWmB;QAAvD;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD;;GA/CQzB,I;;KAAAA,I;AAiDT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}