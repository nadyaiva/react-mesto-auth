{"ast":null,"code":"var _jsxFileName = \"/Users/nadyaivanova/dev/mesto-react/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport AddPostPopup from \"./AddPostPopup\";\nimport UpdateAvatarPopup from \"./UpdateAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport Api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    Promise.all([Api.getUserInfoApi(), Api.getInitialCards()]).then(_ref => {\n      let [userInfo, cards] = _ref;\n      setCurrentUser(userInfo);\n      setCards(cards);\n    });\n  }, []);\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function onEditProfile() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function onAddPlace() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function onEditAvatar() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    Api.changeCardLikeStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    const isOwn = card.owner._id === currentUser._id;\n    Api.deletePost(card._id).then(setCards(state => state.filter(card => card._id != deletedCard._id)));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfileClick: onEditProfile,\n        onAddPlaceClick: onAddPlace,\n        onEditAvatarClick: onEditAvatar,\n        onCardClick: handleCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete,\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AddPostPopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(UpdateAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v9p2Fc9899XX8jA7/xEEf7nPdSw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Footer","Main","EditProfilePopup","AddPostPopup","UpdateAvatarPopup","ImagePopup","Api","CurrentUserContext","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","useEffect","Promise","all","getUserInfoApi","getInitialCards","then","userInfo","handleCardClick","card","onEditProfile","onAddPlace","onEditAvatar","closeAllPopups","handleCardLike","isLiked","likes","some","i","_id","changeCardLikeStatus","newCard","state","map","c","handleCardDelete","isOwn","owner","deletePost","filter","deletedCard"],"sources":["/Users/nadyaivanova/dev/mesto-react/src/components/App.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport AddPostPopup from \"./AddPostPopup\";\nimport UpdateAvatarPopup from \"./UpdateAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport Api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([\n      Api.getUserInfoApi(),\n      Api.getInitialCards()\n    ]).then(([userInfo, cards]) => {\n      setCurrentUser(userInfo)\n      setCards(cards);\n    })\n  }, []);\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function onEditProfile() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function onAddPlace() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function onEditAvatar() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    Api.changeCardLikeStatus(card._id, !isLiked).then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n}\n\n  function handleCardDelete(card) {\n    const isOwn = card.owner._id === currentUser._id;\n    Api.deletePost(card._id)\n    .then(setCards(state => state.filter((card) => card._id != deletedCard._id)))\n  }\n\n  return (\n    <div className=\"App\">\n      <CurrentUserContext.Provider value={currentUser}>\n      <Header />\n      <Main\n        onEditProfileClick={onEditProfile}\n        onAddPlaceClick={onAddPlace}\n        onEditAvatarClick={onEditAvatar}\n        onCardClick={handleCardClick}\n        onCardLike={handleCardLike}\n        onCardDelete={handleCardDelete}\n        cards={cards}\n      />\n      <Footer />\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n      />\n      <AddPostPopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} />\n      <UpdateAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n      />\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}