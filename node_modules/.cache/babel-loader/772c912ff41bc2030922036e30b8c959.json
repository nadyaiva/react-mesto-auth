{"ast":null,"code":"var _jsxFileName = \"/Users/nadyaivanova/dev/react-mesto-auth/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport AddPostPopup from \"./AddPostPopup\";\nimport UpdateAvatarPopup from \"./UpdateAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport Api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Login from \"./Login\";\nimport ProtectedRout from \"./ProtectedRoute\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport Register from \"./Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(true);\n  React.useEffect(() => {\n    Promise.all([Api.getUserInfoApi(), Api.getInitialCards()]).then(_ref => {\n      let [userInfo, cards] = _ref;\n      setCurrentUser(userInfo);\n      setCards(cards);\n    });\n  }, []);\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function onEditProfile() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function onAddPlace() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function onEditAvatar() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    Api.changeCardLikeStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    const isOwn = card.owner._id === currentUser._id;\n    Api.deletePost(card._id).then(setCards(state => state.filter(c => c._id !== card._id))).catch(err => console.log(err));\n  }\n\n  function handleUpdateUser(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    Api.updateUserInfo({\n      name,\n      about\n    }).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(_ref3) {\n    let {\n      avatar\n    } = _ref3;\n    Api.updateAvatar({\n      avatar\n    }).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(_ref4) {\n    let {\n      name,\n      link\n    } = _ref4;\n    Api.addNewCard({\n      name,\n      link\n    }).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRout, {\n          exact: true,\n          path: \"/\",\n          loggedIn: loggedIn,\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Main, {\n              onEditProfileClick: onEditProfile,\n              onAddPlaceClick: onAddPlace,\n              onEditAvatarClick: onEditAvatar,\n              onCardClick: handleCardClick,\n              onCardLike: handleCardLike,\n              onCardDelete: handleCardDelete,\n              cards: cards\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n              isOpen: isEditProfilePopupOpen,\n              onClose: closeAllPopups,\n              onUpdateUser: handleUpdateUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AddPostPopup, {\n              isOpen: isAddPlacePopupOpen,\n              onClose: closeAllPopups,\n              onAddPlace: handleAddPlaceSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(UpdateAvatarPopup, {\n              isOpen: isEditAvatarPopupOpen,\n              onClose: closeAllPopups,\n              onUpdateAvatar: handleUpdateAvatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n              card: selectedCard,\n              onClose: closeAllPopups\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FnAeTD4f56BYjjTK5/PUTLpf3iQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Route","Switch","Redirect","useState","Header","Footer","Main","EditProfilePopup","AddPostPopup","UpdateAvatarPopup","ImagePopup","Api","CurrentUserContext","Login","ProtectedRout","InfoTooltip","Register","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","useEffect","Promise","all","getUserInfoApi","getInitialCards","then","userInfo","handleCardClick","card","onEditProfile","onAddPlace","onEditAvatar","closeAllPopups","handleCardLike","isLiked","likes","some","i","_id","changeCardLikeStatus","newCard","state","map","c","catch","err","console","log","handleCardDelete","isOwn","owner","deletePost","filter","handleUpdateUser","name","about","updateUserInfo","res","handleUpdateAvatar","avatar","updateAvatar","handleAddPlaceSubmit","link","addNewCard"],"sources":["/Users/nadyaivanova/dev/react-mesto-auth/src/components/App.jsx"],"sourcesContent":["import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport AddPostPopup from \"./AddPostPopup\";\nimport UpdateAvatarPopup from \"./UpdateAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport Api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Login from \"./Login\";\nimport ProtectedRout from \"./ProtectedRoute\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport Register from \"./Register\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(true);\n\n  React.useEffect(() => {\n    Promise.all([Api.getUserInfoApi(), Api.getInitialCards()]).then(\n      ([userInfo, cards]) => {\n        setCurrentUser(userInfo);\n        setCards(cards);\n      }\n    );\n  }, []);\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function onEditProfile() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function onAddPlace() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function onEditAvatar() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    Api.changeCardLikeStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    const isOwn = card.owner._id === currentUser._id;\n    Api.deletePost(card._id)\n      .then(setCards((state) => state.filter((c) => c._id !== card._id)))\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateUser({ name, about }) {\n    Api.updateUserInfo({ name, about })\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateAvatar({ avatar }) {\n    Api.updateAvatar({ avatar })\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleAddPlaceSubmit({ name, link }) {\n    Api.addNewCard({ name, link })\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"App\">\n    <Header />\n        <Switch>\n          <ProtectedRout exact path=\"/\" loggedIn={loggedIn} children={ \n            <>\n            \n              \n              <Main\n                onEditProfileClick={onEditProfile}\n                onAddPlaceClick={onAddPlace}\n                onEditAvatarClick={onEditAvatar}\n                onCardClick={handleCardClick}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n                cards={cards}\n              />\n              <Footer />\n              <EditProfilePopup\n                isOpen={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n                onUpdateUser={handleUpdateUser}\n              />\n              <AddPostPopup\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n                onAddPlace={handleAddPlaceSubmit}\n              />\n              <UpdateAvatarPopup\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                onUpdateAvatar={handleUpdateAvatar}\n              />\n              <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n            <InfoTooltip/>\n            </>\n          }\n          />\n            \n          <Route path={\"/sign-up\"}>\n            <Register/>\n          </Route>\n\n          <Route path={\"/login\"}>\n            <Login />\n          </Route>\n        </Switch>\n    </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}