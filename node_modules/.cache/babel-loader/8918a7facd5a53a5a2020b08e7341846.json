{"ast":null,"code":"var _jsxFileName = \"/Users/nadyaivanova/dev/react-mesto-auth/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport AddPostPopup from \"./AddPostPopup\";\nimport UpdateAvatarPopup from \"./UpdateAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport Api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    Promise.all([Api.getUserInfoApi(), Api.getInitialCards()]).then(_ref => {\n      let [userInfo, cards] = _ref;\n      setCurrentUser(userInfo);\n      setCards(cards);\n    });\n  }, []);\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function onEditProfile() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function onAddPlace() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function onEditAvatar() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    Api.changeCardLikeStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    const isOwn = card.owner._id === currentUser._id;\n    Api.deletePost(card._id).then(setCards(state => state.filter(c => c._id !== card._id))).catch(err => console.log(err));\n  }\n\n  function handleUpdateUser(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    Api.updateUserInfo({\n      name,\n      about\n    }).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(_ref3) {\n    let {\n      avatar\n    } = _ref3;\n    Api.updateAvatar({\n      avatar\n    }).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(_ref4) {\n    let {\n      name,\n      link\n    } = _ref4;\n    Api.addNewCard({\n      name,\n      link\n    }).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n          value: currentUser,\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Main, {\n            onEditProfileClick: onEditProfile,\n            onAddPlaceClick: onAddPlace,\n            onEditAvatarClick: onEditAvatar,\n            onCardClick: handleCardClick,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            cards: cards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: isEditProfilePopupOpen,\n            onClose: closeAllPopups,\n            onUpdateUser: handleUpdateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(AddPostPopup, {\n            isOpen: isAddPlacePopupOpen,\n            onClose: closeAllPopups,\n            onAddPlace: handleAddPlaceSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(UpdateAvatarPopup, {\n            isOpen: isEditAvatarPopupOpen,\n            onClose: closeAllPopups,\n            onUpdateAvatar: handleUpdateAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            card: selectedCard,\n            onClose: closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: '/sign-up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: '/sign-in'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v9p2Fc9899XX8jA7/xEEf7nPdSw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Route","Switch","Redirect","useState","Header","Footer","Main","EditProfilePopup","AddPostPopup","UpdateAvatarPopup","ImagePopup","Api","CurrentUserContext","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","useEffect","Promise","all","getUserInfoApi","getInitialCards","then","userInfo","handleCardClick","card","onEditProfile","onAddPlace","onEditAvatar","closeAllPopups","handleCardLike","isLiked","likes","some","i","_id","changeCardLikeStatus","newCard","state","map","c","catch","err","console","log","handleCardDelete","isOwn","owner","deletePost","filter","handleUpdateUser","name","about","updateUserInfo","res","handleUpdateAvatar","avatar","updateAvatar","handleAddPlaceSubmit","link","addNewCard"],"sources":["/Users/nadyaivanova/dev/react-mesto-auth/src/components/App.jsx"],"sourcesContent":["import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport AddPostPopup from \"./AddPostPopup\";\nimport UpdateAvatarPopup from \"./UpdateAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport Api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([Api.getUserInfoApi(), Api.getInitialCards()]).then(\n      ([userInfo, cards]) => {\n        setCurrentUser(userInfo);\n        setCards(cards);\n      }\n    );\n  }, []);\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function onEditProfile() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function onAddPlace() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function onEditAvatar() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    Api.changeCardLikeStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    const isOwn = card.owner._id === currentUser._id;\n    Api.deletePost(card._id)\n      .then(setCards((state) => state.filter((c) => c._id !== card._id)))\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateUser({ name, about }) {\n    Api.updateUserInfo({ name, about })\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateAvatar({ avatar }) {\n    Api.updateAvatar({ avatar })\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleAddPlaceSubmit({ name, link }) {\n    Api.addNewCard({ name, link })\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter> \n      <Route path=\"/\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header />\n        <Main\n          onEditProfileClick={onEditProfile}\n          onAddPlaceClick={onAddPlace}\n          onEditAvatarClick={onEditAvatar}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n          cards={cards}\n        />\n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPostPopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n        <UpdateAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </CurrentUserContext.Provider>\n      </Route>\n      <Route path={'/sign-up'}>\n      </Route>\n      \n      <Route path={'/sign-in'}>\n      </Route>\n      </BrowserRouter> \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}